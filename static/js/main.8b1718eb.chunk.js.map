{"version":3,"sources":["Form.js","Label.js","LabelMaker.js","BulkMaker.js","SettingsDialog.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleNameChange","bind","handleNricChange","handleBedSectorChange","handleBedTentChange","handleBedNoChange","handleDOBChange","handleAllergiesChange","event","this","onChange","name","target","value","nric","bed_sector","bed_tent","bed_no","date","dob","allergies","Grid","container","spacing","item","xs","md","TextField","id","label","variant","fullWidth","align","utils","DateFnsUtils","disableFuture","clearable","format","React","Component","dateFns","DateFnsAdapter","Label","generate","ctx","canvasRef","current","getContext","p","printLeftMargin","printer","dpmm","marginLeft","printHeight","labelHeight","marginTop","save","scale","translate","qr","qrcode","addData","make","qrWidth","getModuleCount","renderTo2dContext","restore","font","fillText","textSize","style","overflow","width","float","position","labelWidth","height","display","justifyContent","alignItems","border","ref","LabelMaker","handleFormChange","handleGenerate","handlePrint","createRef","state","Date","now","change","setState","canvas","clearRect","render","img","toDataURL","console","log","a","window","open","document","write","onload","print","close","onPrint","classes","Fragment","Paper","className","paper","Typography","Button","color","onClick","withStyles","theme","root","flexGrow","title","padding","margin","textAlign","palette","text","secondary","withTheme","parse","require","createLabel","record","BulkMaker","handleUpload","previewRef","data","records","labels","preview","innerHTML","parser","columns","on","read","createElement","push","appendChild","reader","FileReader","result","readAsText","files","component","type","SettingsDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","printerItems","Object","entries","printers","map","MenuItem","key","useState","changed","setChanged","setPrinter","disabled","setDisabled","handleClose","onClose","Dialog","onBackdropClick","DialogTitle","DialogContent","DialogContentText","select","Divider","helperText","InputProps","endAdornment","InputAdornment","DialogActions","startIcon","onSave","config","App","handlePrintDone","handleSettingsToggle","handleSettingsChanged","handleDrawerOpen","handleDrawerClose","savedPrinter","localStorage","getItem","JSON","settingsOpen","drawerOpen","setItem","stringify","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","clsx","menuButton","hide","Drawer","drawer","anchor","drawerPaper","drawerHeader","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","Container","maxWidth","path","flexShrink","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8b1718eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNricChange = this.handleNricChange.bind(this);\r\n    this.handleBedSectorChange = this.handleBedSectorChange.bind(this);\r\n    this.handleBedTentChange = this.handleBedTentChange.bind(this);\r\n    this.handleBedNoChange = this.handleBedNoChange.bind(this);\r\n    this.handleDOBChange = this.handleDOBChange.bind(this);\r\n    this.handleAllergiesChange = this.handleAllergiesChange.bind(this);\r\n  }\r\n\r\n  // Change Handlers\r\n\r\n  handleNameChange(event) {\r\n    this.props.onChange({name: event.target.value});\r\n  }\r\n\r\n  handleNricChange(event) {\r\n    this.props.onChange({nric: event.target.value});\r\n  }\r\n\r\n  handleBedSectorChange(event) {\r\n    this.props.onChange({bed_sector: event.target.value});\r\n  }\r\n\r\n  handleBedTentChange(event) {\r\n    this.props.onChange({bed_tent: event.target.value});\r\n  }\r\n\r\n  handleBedNoChange(event) {\r\n    this.props.onChange({bed_no: event.target.value});\r\n  }\r\n\r\n  handleDOBChange(date) {\r\n    this.props.onChange({dob: date});\r\n  }\r\n\r\n  handleAllergiesChange(event) {\r\n    this.props.onChange({allergies: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField \r\n                id=\"input-name\" \r\n                label=\"Name\" \r\n                variant=\"standard\" \r\n                fullWidth \r\n                value={this.props.name}\r\n                onChange={this.handleNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField \r\n                id=\"input-nric\" \r\n                label=\"NRIC/FIN\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                value={this.props.nric}\r\n                onChange={this.handleNricChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <TextField \r\n                id=\"input-bed-sector\"\r\n                label=\"Bed Sector\"\r\n                variant=\"standard\"\r\n                align=\"left\"\r\n                fullWidth\r\n                value={this.props.bed_sector}\r\n                onChange={this.handleBedSectorChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <TextField \r\n                id=\"input-bed-tent\"\r\n                label=\"Bed Tent\"\r\n                variant=\"standard\"\r\n                align=\"left\"\r\n                fullWidth\r\n                value={this.props.bed_tent}\r\n                onChange={this.handleBedTentChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <TextField\r\n                id=\"input-bed-no\"\r\n                label=\"Bed Number\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                value={this.props.bed_no}\r\n                onChange={this.handleBedNoChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  fullWidth\r\n                  disableFuture\r\n                  variant=\"inline\"\r\n                  label=\"Date of Birth\"\r\n                  clearable\r\n                  value={this.props.dob}\r\n                  onChange={date => this.handleDOBChange(date)}\r\n                  format=\"dd/MM/yyyy\"\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField \r\n                id=\"input-allergies\" \r\n                label=\"Drug Allergies\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                onChange={this.handleAllergiesChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport qrcode from 'qrcode-generator';\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\n\r\nconst dateFns = new DateFnsAdapter();\r\n\r\nclass Label extends React.Component {\r\n  render() {\r\n\r\n    if (this.props.generate) {\r\n      const canvas = this.props.canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const p = this.props;\r\n\r\n      const printLeftMargin = this.props.printer.dpmm*this.props.printer.marginLeft;\r\n      const printHeight = this.props.printer.dpmm*(this.props.printer.labelHeight-2*this.props.printer.marginTop);\r\n      // const printWidth = this.props.printer.dpmm*(this.props.printer.labelWidth-this.props.printer.marginLeft);\r\n      const printPadding = 50;\r\n      const textSize = 30;\r\n      const textLineSpace = 20;\r\n      const textBlockHeight = 4*textSize + 4*textLineSpace;\r\n      const qrScale = 10;\r\n\r\n      // QR Code\r\n      ctx.save()\r\n      ctx.scale(this.props.printer.scale, this.props.printer.scale);\r\n\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin, 0);\r\n      const qr = qrcode(0,'H');\r\n      qr.addData(p.nric);\r\n      qr.make();\r\n      const qrWidth = qr.getModuleCount()*qrScale;\r\n      ctx.translate(printPadding, (printHeight-qrWidth)/2);\r\n      qr.renderTo2dContext(ctx, qrScale);\r\n      ctx.restore();\r\n\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin+printPadding+qrWidth+50, (printHeight-textBlockHeight)/2);\r\n\r\n      // Field labels\r\n      ctx.font = \"bold \" + textSize + \"px Arial\";\r\n      ctx.fillText(\"Name:\", 0, 0);\r\n      ctx.fillText(\"NRIC/FIN:\", 0, (textSize+textLineSpace))\r\n      ctx.fillText(\"Date of Birth:\", 0, 3*(textSize+textLineSpace));\r\n      ctx.fillText(\"Bed Assignment:\", 0, 2*(textSize+textLineSpace));\r\n      ctx.fillText(\"Drug Allergy:\", 0, 4*(textSize+textLineSpace));\r\n\r\n      // Field data\r\n      ctx.translate(300, 0);\r\n      ctx.font = \"bold \"+ textSize +\"px Arial\";\r\n      ctx.fillText(p.name, 0, 0);\r\n      ctx.fillText(p.nric, 0, (textSize+textLineSpace))\r\n      ctx.fillText(dateFns.format(p.dob, \"dd MMM yyyy\"), 0, 3*(textSize+textLineSpace));\r\n      ctx.fillText(`${p.bed_sector}/${p.bed_tent}/${p.bed_no}`, 0, 2*(textSize+textLineSpace));\r\n      ctx.fillText(p.allergies, 0, 4*(textSize+textLineSpace));\r\n\r\n      ctx.restore();\r\n      ctx.restore();\r\n    }\r\n\r\n    return (\r\n      <div style={{\r\n        overflow: 'scroll',\r\n        width:'100%',\r\n        float: 'left',\r\n        position:'relative'\r\n      }}>\r\n        <div style={{\r\n          width:this.props.printer.dpmm*(this.props.printer.labelWidth),\r\n          height:this.props.printer.dpmm*(this.props.printer.labelHeight),\r\n          display: \"flex\",\r\n          justifyContent: 'left',\r\n          alignItems: 'center',\r\n          border: \"solid 1px black\"\r\n        }}>\r\n          <canvas ref={this.props.canvasRef}\r\n                  style={{border: \"dashed 1px black\"}}\r\n                  id=\"labelCanvas\"\r\n                  width={this.props.printer.dpmm*(this.props.printer.labelWidth-this.props.printer.marginLeft)*this.props.printer.scale}\r\n                  height={this.props.printer.dpmm*(this.props.printer.labelHeight-2*this.props.printer.marginTop)*this.props.printer.scale}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Label","import React from 'react';\r\n\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Form from './Form';\r\nimport Label from './Label';\r\n\r\nconst styles = theme => ({ root: {\r\n  flexGrow: 1,\r\n},\r\ntitle: {\r\n  flexGrow: 1,\r\n},\r\ncontainer: {\r\n  padding: theme.spacing(2),\r\n},\r\npaper: {\r\n  margin: theme.spacing(2),\r\n  padding: '20px',\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}\r\n});\r\n\r\nclass LabelMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFormChange = this.handleFormChange.bind(this);\r\n    this.handleGenerate = this.handleGenerate.bind(this);\r\n    this.handlePrint = this.handlePrint.bind(this);\r\n    this.canvasRef = React.createRef();\r\n\r\n    this.state = {\r\n      generate: false,\r\n      name: '',\r\n      nric: '',\r\n      bed_sector: '',\r\n      bed_tent: '',\r\n      bed_no: '',\r\n      dob: Date.now(),\r\n      allergies: '',\r\n    };\r\n  }\r\n\r\n  handleFormChange(change) {\r\n    change.generate=false;\r\n    this.setState(change);\r\n  }\r\n\r\n  handleGenerate() {\r\n    const canvas = this.canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    this.setState({generate: true});\r\n    this.render();\r\n  }\r\n\r\n  handlePrint() {\r\n    const canvas = this.canvasRef.current;\r\n    const img = canvas.toDataURL(\"image/png\");\r\n    console.log(img);\r\n    var a = window.open('', 'Print', 'height=500, width=500');\r\n    a.document.write(\"<html><head>\");\r\n    a.document.write(\"<style>@page{margin-left: 0px;margin-right: 0px;margin-top: 0px;margin-bottom: 0px;}</style>\");\r\n    a.document.write(\"</head><body>\");\r\n    a.document.write('<img src=\"'+ img +'\"/>');\r\n    a.document.write(\"</body></html>\");\r\n    a.onload = ()=>a.print();\r\n    a.document.close();\r\n    this.props.onPrint();\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {classes} = this.props;\r\n\r\n    if (this.props.print) this.handlePrint();\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Personal Particulars\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Form classes={this.props} onChange={this.handleFormChange} {...this.state} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\" \r\n                onClick={this.handleGenerate}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Preview\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Label canvasRef={this.canvasRef} {...this.state} {...this.props}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        </React.Fragment>\r\n  );}\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(LabelMaker);","import React from 'react';\r\nimport qrcode from 'qrcode-generator';\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\n\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst dateFns = new DateFnsAdapter();\r\n\r\nconst parse = require('csv-parse');\r\n\r\nconst styles = theme => ({ root: {\r\n  flexGrow: 1,\r\n},\r\ntitle: {\r\n  flexGrow: 1,\r\n},\r\ncontainer: {\r\n  padding: theme.spacing(2),\r\n},\r\npaper: {\r\n  margin: theme.spacing(2),\r\n  padding: '20px',\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}\r\n});\r\n\r\nfunction createLabel(canvas, record, props) {\r\n  canvas.width=props.printer.dpmm*(props.printer.labelWidth-props.printer.marginLeft);\r\n  canvas.height=props.printer.dpmm*(props.printer.labelHeight-2*props.printer.marginTop);\r\n  canvas.style[\"page-break-after\"] = \"always\";\r\n\r\n  const ctx = canvas.getContext(\"2d\");\r\n  const p = record;\r\n\r\n  const printLeftMargin = props.printer.dpmm*props.printer.marginLeft;\r\n  const printHeight = props.printer.dpmm*(props.printer.labelHeight-2*props.printer.marginTop);\r\n  // const printWidth = props.printer.dpmm*(props.printer.labelWidth-props.printer.marginLeft);\r\n  const printPadding = 50;\r\n  const textSize = 30;\r\n  const textLineSpace = 20;\r\n  const textBlockHeight = 4*textSize + 4*textLineSpace;\r\n  const qrScale = 10;\r\n\r\n  // QR Code\r\n  ctx.save()\r\n  ctx.scale(props.printer.scale, props.printer.scale);\r\n\r\n  ctx.save();\r\n  ctx.translate(printLeftMargin, 0);\r\n  const qr = qrcode(0,'H');\r\n  qr.addData(record[\"NRIC/FIN\"]);\r\n  qr.make();\r\n  const qrWidth = qr.getModuleCount()*qrScale;\r\n  ctx.translate(printPadding, (printHeight-qrWidth)/2);\r\n  qr.renderTo2dContext(ctx, qrScale);\r\n  ctx.restore();\r\n\r\n  ctx.save();\r\n  ctx.translate(printLeftMargin+printPadding+qrWidth+50, (printHeight-textBlockHeight)/2);\r\n\r\n  // Field labels\r\n  ctx.font = \"bold \" + textSize + \"px Arial\";\r\n  ctx.fillText(\"Name:\", 0, 0);\r\n  ctx.fillText(\"NRIC/FIN:\", 0, (textSize+textLineSpace))\r\n  ctx.fillText(\"Date of Birth:\", 0, 3*(textSize+textLineSpace));\r\n  ctx.fillText(\"Bed Assignment:\", 0, 2*(textSize+textLineSpace));\r\n  ctx.fillText(\"Drug Allergy:\", 0, 4*(textSize+textLineSpace));\r\n\r\n  // Field data\r\n  ctx.translate(300, 0);\r\n  ctx.font = \"bold \"+ textSize +\"px Arial\";\r\n  ctx.fillText(record[\"NAME\"], 0, 0);\r\n  ctx.fillText(record[\"NRIC/FIN\"], 0, (textSize+textLineSpace))\r\n  ctx.fillText(dateFns.format(new Date(record[\"DATE OF BIRTH\"]), \"dd MMM yyyy\"), 0, 3*(textSize+textLineSpace));\r\n  ctx.fillText(`${record[\"SECTOR\"]}/${record[\"TENT\"]}/${record[\"BED NUMBER\"]}`, 0, 2*(textSize+textLineSpace));\r\n  ctx.fillText(record[\"DRUG ALLERGY\"], 0, 4*(textSize+textLineSpace));\r\n\r\n  ctx.restore();\r\n}\r\n\r\n\r\nclass BulkMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handleGenerate = this.handleGenerate.bind(this);\r\n    this.handlePrint = this.handlePrint.bind(this);\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n    this.previewRef = React.createRef();\r\n\r\n    this.state = {\r\n      generate: false,\r\n      data: '',\r\n      records: {},\r\n      labels: [],\r\n    };\r\n  }\r\n\r\n  handleGenerate() {\r\n    const labels = [];\r\n    const preview = this.previewRef.current;\r\n    preview.innerHTML = '';\r\n    const parser = parse(this.state.data, {columns: true});\r\n    parser.on('readable', ()=>{\r\n      let record;\r\n      // eslint-disable-next-line\r\n      while (record = parser.read()){\r\n        const canvas = document.createElement(\"canvas\");\r\n        createLabel(canvas, record, {...this.props});\r\n        labels.push(canvas.toDataURL());\r\n        preview.appendChild(canvas);\r\n      }\r\n    });\r\n\r\n    parser.on('end', ()=>{\r\n      this.setState({labels: labels});\r\n      this.setState({generate: true});\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  handlePrint() {\r\n    var a = window.open('', 'Print', 'height=500, width=500');\r\n    let label;\r\n    for (label of this.state.labels){\r\n      a.document.write('<img src=\"'+ label +'\" style=\"page-break-after: always\"/>');\r\n    }\r\n    a.onload = ()=>a.print();\r\n    a.document.close();\r\n    this.props.onPrint();\r\n  }\r\n\r\n  handleUpload(event) {\r\n    this.setState({generate: false});\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      this.setState({data: event.target.result});\r\n    };\r\n    reader.readAsText(event.target.files[0]);\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {classes} = this.props;\r\n\r\n    if (this.props.print) this.handlePrint();\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Upload CSV\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n              >\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={this.handleUpload}\r\n                />\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\" \r\n                onClick={this.handleGenerate}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper ref={this.previewRef} className={classes.paper} style={{height:\"50vh\", overflow: 'scroll',}}/>\r\n        </React.Fragment>\r\n  );}\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(BulkMaker);","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Typography } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nexport default function SettingsDialog (props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const printerItems = Object.entries(props.printers).map((printer) =>\r\n    <MenuItem key={printer[1].type} value={printer[1].type}>{printer[1].name}</MenuItem>\r\n  )\r\n\r\n  const [changed, setChanged] = React.useState(false);\r\n  const [printer, setPrinter] = React.useState(props.printer);\r\n  const [disabled, setDisabled] = React.useState(props.printer.type !== \"Unknown\");\r\n\r\n  const handlePrinterTypeChange = (event) => {\r\n    \r\n    let type = event.target.value;\r\n\r\n    if (type !== \"Unknown\") {\r\n      // update everything to match known printer\r\n      setPrinter(props.printers[type]);\r\n      setDisabled(true);\r\n    } else {\r\n      const p = {...printer};\r\n      p.type = type;     \r\n      setPrinter(p);\r\n      setDisabled(false);\r\n    }\r\n    setChanged(true);\r\n  }\r\n\r\n  const handleMarginTopChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.marginTop = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleMarginLeftChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.marginLeft = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleLabelHeightChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.labelHeight = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleLabelWidthChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.labelWidth = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleResolutionChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.dpmm = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleScaleChange = (event) => {\r\n    const p={...printer};\r\n    p.scale = event.target.value;\r\n    setPrinter(p);\r\n    setChanged(true);\r\n  }\r\n\r\n  const handleSave = () => {\r\n    props.onSave({...printer});\r\n    setChanged(false);\r\n    props.onClose();\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setPrinter(props.printer);\r\n    //setDisabled(props.printer.type !== \"Unknown\");\r\n    setChanged(false);\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n      <Dialog fullScreen={fullScreen} onBackdropClick={handleClose} {...props}>\r\n        <DialogTitle>{\"Settings\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n              Select print settings to match printer at your station.\r\n          </DialogContentText>\r\n          \r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Printer Type\"\r\n                value={printer.type}\r\n                onChange={handlePrinterTypeChange}\r\n              >\r\n                <MenuItem key=\"Unknown\" value=\"Unknown\">\r\n                  {\"Unknown (Manual Config.)\"}\r\n                </MenuItem>\r\n                {printerItems}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Resolution\"\r\n                helperText=\"300 dpi = 12 dpmm\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">dpmm</InputAdornment>}}\r\n                value={printer.dpmm}\r\n                onChange={handleResolutionChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Scale\"\r\n                helperText=\"Local: 1, Cloud: 0.25\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">x</InputAdornment>}}\r\n                value={printer.scale}\r\n                onChange={handleScaleChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Top Margin\"\r\n                helperText=\"Also the bottom margin\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.marginTop}\r\n                onChange={handleMarginTopChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Left Margin\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.marginLeft}\r\n                onChange={handleMarginLeftChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div  align=\"center\" style={{display: \"flex\", justifyContent: 'center', alignItems: 'center', width:\"100%\", height:\"100%\", border: \"solid 1px black\"}}>\r\n                <Typography>Label</Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Label Height\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.labelHeight}\r\n                onChange={handleLabelHeightChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Label Width\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.labelWidth}\r\n                onChange={handleLabelWidthChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button startIcon={<SaveIcon/>} onClick={handleSave} disabled={!changed}>Save</Button>\r\n          <Button startIcon={<CloseIcon/>} onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport ControlPointDuplicateIcon from '@material-ui/icons/ControlPointDuplicate';\r\n\r\nimport LabelMaker from './LabelMaker';\r\nimport BulkMaker from './BulkMaker';\r\nimport SettingsDialog from './SettingsDialog';\r\n\r\nconst config = require('./config.json');\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({ root: {\r\n                  flexGrow: 1,\r\n                },\r\n                title: {\r\n                  flexGrow: 1,\r\n                },\r\n                container: {\r\n                  padding: theme.spacing(2),\r\n                },\r\n                paper: {\r\n                  margin: theme.spacing(2),\r\n                  padding: '20px',\r\n                  textAlign: 'center',\r\n                  color: theme.palette.text.secondary,\r\n                },\r\n                drawer: {\r\n                  width: drawerWidth,\r\n                  flexShrink: 0,\r\n                },\r\n                drawerPaper: {\r\n                  width: drawerWidth,\r\n                },\r\n});\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handlePrint = this.handlePrint.bind(this);\r\n    this.handlePrintDone = this.handlePrintDone.bind(this);\r\n    this.handleSettingsToggle = this.handleSettingsToggle.bind(this);\r\n    this.handleSettingsChanged = this.handleSettingsChanged.bind(this);\r\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n\r\n    const savedPrinter = window.localStorage.getItem('printer');\r\n\r\n    this.state = {\r\n      printer: savedPrinter ? JSON.parse(savedPrinter) : config.printers[\"B_TD2130N\"],\r\n      settingsOpen: false,\r\n      drawerOpen: false,\r\n    };\r\n  }\r\n\r\n  handleSettingsToggle() {\r\n    this.setState({settingsOpen: !this.state.settingsOpen});\r\n  }\r\n\r\n  handleSettingsChanged(printer) {\r\n    window.localStorage.setItem('printer', JSON.stringify(printer));\r\n    this.setState({printer: printer});\r\n    console.log(printer);\r\n  }\r\n\r\n  handleDrawerOpen() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  handleDrawerClose() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  handlePrint() {\r\n    this.setState({print: true});\r\n  }\r\n\r\n  handlePrintDone() {\r\n    this.setState({print: false});\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {classes} = this.props;\r\n    \r\n    return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, this.state.drawerOpen && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Label Maker\r\n            </Typography>\r\n            <Button color=\"inherit\" startIcon={<PrintIcon />} onClick={this.handlePrint}>Print</Button>\r\n            <IconButton color=\"inherit\" onClick={this.handleSettingsToggle}><SettingsIcon/></IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={this.state.drawerOpen}\r\n          onClose={this.handleDrawerClose}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={this.handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={Link} to=\"/\">\r\n            <ListItemIcon><ControlPointIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Single\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/bulk\">\r\n            <ListItemIcon><ControlPointDuplicateIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Bulk\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n\r\n\r\n        <Container className={classes.container} maxWidth=\"md\">\r\n          <Switch>\r\n            <Route path='/bulk'>\r\n              <BulkMaker onPrint={this.handlePrintDone} {...this.state}/>\r\n            </Route>\r\n            <Route path='/'>\r\n              <LabelMaker onPrint={this.handlePrintDone} {...this.state} />\r\n            </Route>\r\n          </Switch>\r\n        </Container>\r\n        <SettingsDialog printer={this.state.printer} printers={config.printers} open={this.state.settingsOpen} onClose={this.handleSettingsToggle} onSave={this.handleSettingsChanged}/>\r\n      </div>\r\n    </Router>\r\n  );}\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}